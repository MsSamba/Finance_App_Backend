# Generated by Django 5.2.5 on 2025-08-26 12:46

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SavingsTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('suggested_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('suggested_timeline_months', models.PositiveIntegerField(blank=True, null=True)),
                ('color', models.CharField(choices=[('bg-red-500', 'Red'), ('bg-yellow-500', 'Yellow'), ('bg-indigo-500', 'Indigo'), ('bg-green-500', 'Green'), ('bg-purple-500', 'Purple'), ('bg-blue-500', 'Blue'), ('bg-pink-500', 'Pink'), ('bg-gray-500', 'Gray')], default='bg-blue-500', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('category', models.CharField(default='general', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Savings Template',
                'verbose_name_plural': 'Savings Templates',
                'db_table': 'savings_template',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SavingsAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('auto_save_percentage', models.DecimalField(decimal_places=2, default=Decimal('20.00'), help_text='Percentage of income to automatically save', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('is_auto_save_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='savings_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Savings Account',
                'verbose_name_plural': 'Savings Accounts',
                'db_table': 'savings_account',
            },
        ),
        migrations.CreateModel(
            name='SavingsGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('color', models.CharField(choices=[('bg-red-500', 'Red'), ('bg-yellow-500', 'Yellow'), ('bg-indigo-500', 'Indigo'), ('bg-green-500', 'Green'), ('bg-purple-500', 'Purple'), ('bg-blue-500', 'Blue'), ('bg-pink-500', 'Pink'), ('bg-gray-500', 'Gray')], default='bg-red-500', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('auto_allocate_enabled', models.BooleanField(default=False)),
                ('auto_allocate_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percentage of savings to auto-allocate to this goal', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='savings_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Savings Goal',
                'verbose_name_plural': 'Savings Goals',
                'db_table': 'savings_goal',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavingsAllocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('allocation_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('auto_allocation', 'Auto Allocation'), ('transfer', 'Transfer')], max_length=20)),
                ('source', models.CharField(choices=[('manual', 'Manual'), ('auto_save', 'Auto Save'), ('transfer', 'Transfer'), ('interest', 'Interest')], default='manual', max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('balance_before', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('savings_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='savings.savingsgoal')),
            ],
            options={
                'verbose_name': 'Savings Allocation',
                'verbose_name_plural': 'Savings Allocations',
                'db_table': 'savings_allocation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavingsReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_date', models.DateField()),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_saved', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('auto_saved', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('manual_saved', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_withdrawn', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('net_savings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('goals_completed', models.PositiveIntegerField(default=0)),
                ('goals_in_progress', models.PositiveIntegerField(default=0)),
                ('average_goal_progress', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='savings_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Savings Report',
                'verbose_name_plural': 'Savings Reports',
                'db_table': 'savings_report',
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='SavingsSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_save_enabled', models.BooleanField(default=True)),
                ('auto_save_percentage', models.DecimalField(decimal_places=2, default=Decimal('20.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=True)),
                ('goal_reminders', models.BooleanField(default=True)),
                ('monthly_reports', models.BooleanField(default=True)),
                ('achievement_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='savings_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Savings Settings',
                'verbose_name_plural': 'Savings Settings',
                'db_table': 'savings_settings',
            },
        ),
        migrations.CreateModel(
            name='SavingsTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('auto_save', 'Automatic Saving'), ('transfer', 'Transfer')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.CharField(max_length=255)),
                ('balance_before', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=12)),
                ('reference_transaction_id', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('savings_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='savings.savingsaccount')),
            ],
            options={
                'verbose_name': 'Savings Transaction',
                'verbose_name_plural': 'Savings Transactions',
                'db_table': 'savings_transaction',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='savingsgoal',
            index=models.Index(fields=['user', 'status'], name='savings_goa_user_id_dbb2f4_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsgoal',
            index=models.Index(fields=['target_date'], name='savings_goa_target__2ad479_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsgoal',
            index=models.Index(fields=['priority'], name='savings_goa_priorit_11fb76_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsallocation',
            index=models.Index(fields=['savings_goal', 'created_at'], name='savings_all_savings_625cd4_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsallocation',
            index=models.Index(fields=['allocation_type'], name='savings_all_allocat_5f0511_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsallocation',
            index=models.Index(fields=['source'], name='savings_all_source_c15fd6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='savingsreport',
            unique_together={('user', 'report_date')},
        ),
        migrations.AddIndex(
            model_name='savingstransaction',
            index=models.Index(fields=['savings_account', 'created_at'], name='savings_tra_savings_553e6d_idx'),
        ),
        migrations.AddIndex(
            model_name='savingstransaction',
            index=models.Index(fields=['transaction_type'], name='savings_tra_transac_f0b7fc_idx'),
        ),
    ]
